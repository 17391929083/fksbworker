<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd"><!--添加配置问文件-->


    <!--配置远程rabbitmq-->
        <rabbit:connection-factory id="connectionFactory"
                                   host="182.92.59.108"
                                   port="5672"
                                   username="water"
                                   password="water"
                                   virtual-host="/water"
                                   publisher-confirms="true"
                                   publisher-returns="true"
        ></rabbit:connection-factory>


        <!--定义管理交换机、队列-->
        <rabbit:admin connection-factory="connectionFactory"/>

        <!--定义持久化队列，不存在则自动创建；不绑定到交换机则绑定到默认交换机
        默认交换机类型为direct，名字为：""，路由键为队列的名称
        -->
        <!--
            id：bean的名称
            name：queue的名称
            auto-declare:自动创建
            auto-delete:自动删除。 最后一个消费者和该队列断开连接后，自动删除队列
            durable：是否持久化
        实例:
        -->
        <rabbit:queue id="spring_queue" name="spring_queue"    auto-declare="true"/>

        <rabbit:queue id="phone_message" name="phone_message"    auto-declare="true">
            <!--队列过期时间
                <rabbit:queue-arguments>
                        <entry key="x-dead-letter-exchange"   value="spring_fanout_exchange"></entry>

                        <entry key="x-dead-letter-routing-key"  value="#"></entry>
                        <entry  key="x-message-ttl"  value="60000"   value-type="java.lang.Integer"></entry>

                        <entry key="x-max-length"    value="10"        value-type="java.lang.Integer"></entry>
                </rabbit:queue-arguments>
                -->

        </rabbit:queue>



        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~广播；所有队列都能收到消息~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!--定义广播交换机中的持久化队列，不存在则自动创建-->
        <rabbit:queue id="spring_fanout_queue_1" name="spring_fanout_queue_1" auto-declare="true"/>

        <!--定义广播交换机中的持久化队列，不存在则自动创建-->
        <rabbit:queue id="spring_fanout_queue_2" name="spring_fanout_queue_2" auto-declare="true"/>

        <!--定义广播类型交换机；并绑定上述两个队列-->
        <rabbit:fanout-exchange id="spring_fanout_exchange" name="spring_fanout_exchange"  auto-declare="true">
                <rabbit:bindings>
                        <rabbit:binding  queue="spring_fanout_queue_2"  />
                </rabbit:bindings>
        </rabbit:fanout-exchange>


        <!--
          定义 Routing  路由模式 交互机
        -->


        <!-- 定义队列用于基表维护-->
        <rabbit:queue id="fksb_maintain_queue" name="fksb_maintain_queue"  auto-declare="true"/>
        <!-- 修改用户信息队列-->
        <rabbit:queue id="fksb_zncb_queue" name="fksb_zncb_queue"  auto-declare="true"/>

        <rabbit:direct-exchange name="fksb_maintain_exchange" >
                <rabbit:bindings>
                        <!--direct 类型的交换机绑定队列  key ：路由key  queue：队列名称-->
                        <rabbit:binding queue="fksb_maintain_queue" key="maintain"></rabbit:binding>
                        <rabbit:binding queue="fksb_zncb_queue" key="updateZncb"></rabbit:binding>

                </rabbit:bindings>

        </rabbit:direct-exchange>



        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~通配符；*匹配一个单词，#匹配多个单词 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!--定义广播交换机中的持久化队列，不存在则自动创建-->
        <rabbit:queue id="spring_topic_queue_star" name="spring_topic_queue_star"  auto-declare="true"/>
        <!--定义广播交换机中的持久化队列，不存在则自动创建-->
        <rabbit:queue id="spring_topic_queue_well" name="spring_topic_queue_well" auto-declare="true"/>
        <!--定义广播交换机中的持久化队列，不存在则自动创建-->
        <rabbit:queue id="spring_topic_queue_well2" name="spring_topic_queue_well2" auto-declare="true"/>

        <!--
          声明  topic 类型的交换机
        -->
        <rabbit:topic-exchange id="spring_topic_exchange"  name="spring_topic_exchange" auto-declare="true">
                <rabbit:bindings>
                        <rabbit:binding pattern="baiqi.*"  queue="spring_topic_queue_star"/>
                        <rabbit:binding pattern="baiqi.#" queue="spring_topic_queue_well"/>
                        <rabbit:binding pattern="itcast.#" queue="spring_topic_queue_well2"/>
                </rabbit:bindings>
        </rabbit:topic-exchange>

        <!--定义rabbitTemplate对象操作可以在代码中方便发送消息-->
        <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>






        <!--====================================消费者配置=============================================-->
<!--配置监听器-->
        <bean class="com.fksb.rabbitconsumer.ConsumerListener" id="consumerListener"></bean>

        <!--配置监听器-->
        <bean class="com.fksb.rabbitconsumer.MainTainServiceRabbitMq" id="mainTainServiceRabbitMq"></bean>

        <bean class="com.fksb.rabbitconsumer.UpdateZncbServiceRabbitMq" id="updateZncbServiceRabbitMq"></bean>

        <!--监听器绑定队列-->

        <!--监听队列必须通过手动签收 acknowledge="manual" 来设置-->
        <rabbit:listener-container connection-factory="connectionFactory"  auto-declare="true" acknowledge="manual">

                <rabbit:listener ref="consumerListener"  queue-names="phone_message"></rabbit:listener>

                <rabbit:listener ref="mainTainServiceRabbitMq"  queue-names="fksb_maintain_queue"></rabbit:listener>

                <rabbit:listener ref="updateZncbServiceRabbitMq"  queue-names="fksb_zncb_queue"></rabbit:listener>



        </rabbit:listener-container>

</beans>